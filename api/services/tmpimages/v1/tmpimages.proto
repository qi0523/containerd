/*
	Copyright The containerd Authors.

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

		http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
*/

syntax = "proto3";

package containerd.services.tmpimages.v1;

import "google/protobuf/empty.proto";
import "github.com/containerd/containerd/api/types/descriptor.proto";

option go_package = "github.com/containerd/containerd/api/services/tmpimages/v1;tmpimages";

service TmpImages {
	// Insert returns an image by name.
	rpc InsertTmpImage(CreateTmpImageRequest) returns (CreateTmpImageResponse);

	// GetTmpImage
	rpc GetTmpImage(GetTmpImageRequest) returns (GetTmpImageResponse);

	// Delete deletes the image by name.
	rpc Delete(DeleteTmpImageRequest) returns (google.protobuf.Empty);
}

message TmpImage {
	// Name provides a unique name for the image.
	//
	// Containerd treats this as the primary identifier.
	string name = 1;

	// Target describes the content entry point of the image.
	containerd.types.Descriptor target = 2;
}

message GetTmpImageRequest {
	string name = 1;
}

message GetTmpImageResponse {
	TmpImage image = 1;
}

message CreateTmpImageRequest {
	TmpImage image = 1;
}

message CreateTmpImageResponse {
	TmpImage image = 1;
}

message DeleteTmpImageRequest {
	string name = 1;
}